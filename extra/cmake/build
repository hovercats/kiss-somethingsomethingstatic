#!/bin/sh -e

patch -p1 < cmake-no-execinfo.patch

# should no longer complain about libs
sed -i 's,curses_version,baudrate,'   \
    Source/Checks/Curses/CheckCurses.c
sed -i 's,defined(HAVE_LIBCRYPTO),0,' \
    Utilities/cmlibarchive/libarchive/archive_hmac.c

if kiss l cmake; then

# We cant pass -static flag globally, else Cmake will fail to build when cmake
# isnt installed
export LDFLAGS="$LDFLAGS -static"

    cmake -B build \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_USE_SYSTEM_CURL=False \
        -DCMAKE_USE_SYSTEM_EXPAT=True \
        -DCMAKE_USE_SYSTEM_ZLIB=True \
        -DCMAKE_USE_SYSTEM_BZIP2=True \
        -DBUILD_TESTING=OFF

    cmake --build   build
    cmake --install build

else

# Build Cmake non-static first
    ./configure \
        --prefix=/usr \
        --no-system-curl \
        --system-expat \
        --system-zlib \
        --system-bzip2

    make
    make install

# export path to our newly built cmake, so we can build it statically, without
# having to manually build it again.
export DESTIDR="$1"
export PATH="$1/usr/bin:$PATH"
export LDFLAGS="$LDFLAGS -static"

    cmake -B build \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_USE_SYSTEM_CURL=False \
        -DCMAKE_USE_SYSTEM_EXPAT=True \
        -DCMAKE_USE_SYSTEM_ZLIB=True \
        -DCMAKE_USE_SYSTEM_BZIP2=True \
        -DBUILD_TESTING=OFF

    cmake --build   build
    cmake --install build

fi

rm -rf \
    "$1/usr/doc" \
    "$1/usr/share/cmake"*/Help \
    "$1/usr/share/bash-completion"
