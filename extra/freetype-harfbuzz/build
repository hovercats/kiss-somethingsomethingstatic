#!/bin/sh -e

build_freetype() (

    cd freetype

    LONG_OPT=FT_CONFIG_OPTION_USE

    meson \
        --prefix=/usr \
        --buildtype=release \
        -Ddefault_library=static \
        -Dharfbuzz="$2" \
        -Dbrotli=disabled \
        -Dpng=enabled \
        -Dzlib=disabled \
        -Dbzip2=disabled \
        . build
        

    # ftoption.h is improperly generated when using meson!
    # A future option here is to submit a fix to the meson.build upstream.
    # For now, this will do.
    if [ "$2" = disabled ]; then
        sed -i "s/--enable=${LONG_OPT}_HARFBUZZ/--disable=${LONG_OPT}_HARFBUZZ/g" \
            build/build.ninja
    fi

    sed -i "s/--enable=${LONG_OPT}_BROTLI/--disable=${LONG_OPT}_HARFBUZZ/g" \
        build/build.ninja

    ninja -C build
    ninja -C build install
)

build_harfbuzz() (

    # Point Harfbuzz to the Freetype files.
    #export CFLAGS="$CFLAGS -I$1/usr/include/freetype2"
    export CXXFLAGS="$CXXFLAGS -I$1/usr/include/freetype2"
    export LDFLAGS="$LDFLAGS -L$1/usr/lib"

    cd harfbuzz

    meson \
        --prefix=/usr \
        --buildtype=release \
        -Dpkg_config_path="$1/usr/lib/pkgconfig" \
        -Ddefault_library=static \
        -Dfreetype=enabled \
        -Dcairo=disabled \
        -Dglib=disabled \
        -Dicu=disabled \
        -Dbenchmark=disabled \
        -Dgobject=disabled \
        -Dtests=disabled \
        . build

    ninja -C build
    ninja -C build install
)

# We explicitly build shared freetype and harfbuzz as shared libraries because the
# static libraries have esoteric linker problems I don't want to resolve and have
# basically zero patience for at this point :))))))
export DESTDIR="$1"

build_freetype "$1" disabled
build_harfbuzz "$1"

# Point Freetype to the Harfbuzz files.
export HARFBUZZ_CFLAGS="-I$PWD/harfbuzz/src"
export HARFBUZZ_LIBS="-L$PWD/harfbuzz/build/src -lharfbuzz"

build_freetype "$1" enabled
