#!/bin/sh -e

export DESTDIR="$1"
export CFLAGS="$CFLAGS -Wno-implicit-fallthrough"

# Remove 'libelf' and 'util-linux' dependencies.
sed -i 's/HAVE_LIBELF/HAVE_KISS/'      gio/meson.build
sed -i 's/libmount_dep.found()/false/' meson.build

# Build against static zlib, libelf
sed -i "s/zlib', /zlib', static: true, /"     meson.build
sed -i "s/libelf', /libelf', static: true, /" gio/meson.build

# Don't build tests/fuzzing stuff.
find . -type f -name meson.build -exec \
    sed -i "/subdir('tests')/d;/subdir('fuzzing')/d" {} +

meson \
    --prefix=/usr \
    -Dbuildtype=release \
    -Ddefault_library=static \
    -Dlibmount=disabled \
    -Dman=false \
    -Dinternal_pcre=true \
    -Dglib_assert=false \
    -Dglib_checks=false \
    . build

ninja -C build
ninja -C build install

# Currently... broken? Only needed for gtk+3 anyways.
## json-glib is a separate package which we build alongside
## glib (as if they were one and the same). The upstream for
## json-glib is effectively dead (only translation work) so
## this makes my life a little easier..
#{
#    cd json-glib
#
#    # This mess of CFLAGS, etc is needed to point json-glib to
#    # the freshly built glib sources instead of the system's.
#    export PKG_CONFIG_PATH="$1/usr/lib/pkgconfig:$PKG_CONFIG_PATH"
#    export PATH="$1/usr/bin:$PATH"
#    export CFLAGS="$CFLAGS -I$1/usr/include/glib-2.0"
#    export CFLAGS="$CFLAGS -I$1/usr/lib/glib-2.0/include -pthread"
#    export LDFLAGS="$LDFLAGS -L$1/usr/lib/"
#
#    sed -i 's/gio_deb/gio_deb, static: true/g' json-glib/meson.build
#
#    meson \
#        --prefix=/usr \
#        --sysconfdir=/etc \
#        --mandir=/usr/share/man \
#        -Dbuildtype=release \
#        -Ddefault_library=static \
#        -Dintrospection=disabled \
#        -Ddocs=false \
#        -Dtests=false \
#        . build
#
#    ninja -C build
#    ninja -C build install
#}

kiss l dbus >/dev/null 2>&1 || rm -rf "$1/usr/bin/gdbus"
