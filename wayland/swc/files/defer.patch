From e05969b0ac0009dba18e430596c1888ae4cc9136 Mon Sep 17 00:00:00 2001
From: ian <42294085+ianbeyst@users.noreply.github.com>
Date: Sat, 18 Apr 2020 22:55:23 +0200
Subject: [PATCH] defer setting subsurface geometry until after parent commit

---
 libswc/subsurface.c | 30 +++++++++++++++++++++---------
 libswc/subsurface.h |  1 +
 libswc/surface.c    |  6 ++++++
 3 files changed, 28 insertions(+), 9 deletions(-)

diff --git a/libswc/subsurface.c b/libswc/subsurface.c
index c8aaca0..dc4232c 100644
--- a/libswc/subsurface.c
+++ b/libswc/subsurface.c
@@ -37,13 +37,6 @@ set_position(struct wl_client *client, struct wl_resource *resource, int32_t x,
     subsurface->position.x = x;
     subsurface->position.y = y;
     subsurface->position.set = true;
-
-    view_move(subsurface->surface->view, subsurface->parent->view->geometry.x + x, subsurface->parent->view->geometry.y + y);
-    view_update(subsurface->surface->view);
-
-	struct compositor_view *comp_view = compositor_view(subsurface->surface->view);
-	if (comp_view)
-		compositor_view_show(comp_view);
 }
 
 static void
@@ -160,12 +153,31 @@ subsurface_new(struct wl_client *client, uint32_t version, uint32_t id, struct s
 
     subsurface->synchronized = true;
 
-    compositor_create_view(subsurface->surface);
+    struct compositor_view *comp_view = compositor_create_view(subsurface->surface);
+    compositor_view_show(comp_view);
 
-	return subsurface;
+    return subsurface;
 
 error1:
 	free(subsurface);
 error0:
 	return NULL;
 }
+
+void
+subsurface_parent_commit(struct subsurface *subsurface, bool is_parent_synchronized)
+{
+	if (subsurface->position.set) {
+        int32_t oldx = subsurface->parent->view->geometry.x;
+        int32_t oldy = subsurface->parent->view->geometry.y;
+        int32_t newx = oldx + subsurface->position.x;
+        int32_t newy = oldy + subsurface->position.y;
+    	view_move(subsurface->surface->view, newx, newy);
+
+		subsurface->position.set = false;
+	}
+
+    if (is_parent_synchronized || subsurface->synchronized) {
+        // TODO: handle this
+    }
+}
diff --git a/libswc/subsurface.h b/libswc/subsurface.h
index 2bfd578..43369d9 100644
--- a/libswc/subsurface.h
+++ b/libswc/subsurface.h
@@ -51,5 +51,6 @@ struct subsurface {
 };
 
 struct subsurface *subsurface_new(struct wl_client *client, uint32_t version, uint32_t id, struct surface *surface, struct surface *parent);
+void subsurface_parent_commit(struct subsurface *subsurface, bool is_parent_synchronized);
 
 #endif
diff --git a/libswc/surface.c b/libswc/surface.c
index f6809d8..a6f3c9e 100644
--- a/libswc/surface.c
+++ b/libswc/surface.c
@@ -22,6 +22,7 @@
  */
 
 #include "surface.h"
+#include "subsurface.h"
 #include "event.h"
 #include "internal.h"
 #include "output.h"
@@ -263,6 +264,11 @@ commit(struct wl_client *client, struct wl_resource *resource)
 	}
 
 	surface->pending.commit = 0;
+
+    struct subsurface *sub;
+    wl_list_for_each(sub, &surface->subsurface_list, parent_link) {
+        subsurface_parent_commit(sub, false);
+    }
 }
 
 static void
